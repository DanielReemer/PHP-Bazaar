name: Add Labels to Pull Requests

on:
  pull_request:
    types: [opened]

jobs:
  add_labels:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check PR title for keywords
      id: check_keywords
      run: |
        contains_feat=$(echo "${{ github.event.pull_request.title }}" | grep -c 'feat/')
        contains_bug=$(echo "${{ github.event.pull_request.title }}" | grep -c 'bug/')
        contains_docs=$(echo "${{ github.event.pull_request.title }}" | grep -c 'docs/')
        contains_refactor=$(echo "${{ github.event.pull_request.title }}" | grep -c 'refactor/')
        contains_test=$(echo "${{ github.event.pull_request.title }}" | grep -c 'test/')
        echo "::set-output name=contains_feat::$contains_feat"
        echo "::set-output name=contains_bug::$contains_bug"
        echo "::set-output name=contains_docs::$contains_docs"
        echo "::set-output name=contains_refactor::$contains_refactor"
        echo "::set-output name=contains_test::$contains_test"
    
    - name: Add labels based on keywords in PR title
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const containsFeat = context.payload.pull_request.title.includes('feat/');
          const containsBug = context.payload.pull_request.title.includes('bug/');
          const containsDocs = context.payload.pull_request.title.includes('docs/');
          const containsRefactor = context.payload.pull_request.title.includes('refactor/');
          const containsTest = context.payload.pull_request.title.includes('test/');
          
          if (containsFeat) {
            await github.issues.addLabels({
              issue_number: context.issue.number,
              labels: ['enhancement']
            });
          }
          if (containsBug) {
            await github.issues.addLabels({
              issue_number: context.issue.number,
              labels: ['bug']
            });
          }
          if (containsDocs) {
            await github.issues.addLabels({
              issue_number: context.issue.number,
              labels: ['documentation']
            });
          }
          if (containsRefactor) {
            await github.issues.addLabels({
              issue_number: context.issue.number,
              labels: ['refactor']
            });
          }
          if (containsTest) {
            await github.issues.addLabels({
              issue_number: context.issue.number,
              labels: ['test']
            });
          }
